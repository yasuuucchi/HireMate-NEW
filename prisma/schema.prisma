// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model JobRequirement {
  id               String   @id @default(cuid())
  positionName     String
  requiredSkills   String[]
  niceToHaveSkills String[]
  experienceYears  Int
  numberOfOpenings Int
  employmentType   String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model CultureValue {
  id         String   @id @default(cuid())
  title      String
  importance Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model EvaluationWeights {
  id                String   @id @default(cuid())
  skillWeight       Float
  cultureWeight     Float
  achievementWeight Float
  potentialWeight   Float
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model CustomStatus {
  id        String   @id @default(cuid())
  name      String   @unique
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model StatusHistory {
  id          String   @id @default(cuid())
  candidateId String
  status      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Candidate {
  id                String    @id @default(cuid())
  name              String
  email             String
  phone             String
  resumeUrl         String?
  status            String
  skillScore        Float?
  cultureScore      Float?
  achievementScore  Float?
  potentialScore    Float?
  totalScore        Float?
  rank              String?
  resumeSummary     String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  interviewSheets   InterviewSheet[]
}

model InterviewSheet {
  id          String    @id @default(cuid())
  candidateId String
  candidate   Candidate @relation(fields: [candidateId], references: [id])
  questions   Question[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Question {
  id                String         @id @default(cuid())
  text              String
  goodAnswerExample String
  badAnswerExample  String
  rating            Int?
  note              String?
  order             Int
  interviewSheetId  String
  interviewSheet    InterviewSheet @relation(fields: [interviewSheetId], references: [id])
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
}
